#                ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà
#                ‚ñà‚îÄ‚îÄ‚îÄ‚îÄ‚ñà‚ñà‚îÄ‚îÄ‚îÄ‚îÄ‚ñà‚îÄ‚îÄ‚îÄ‚îÄ‚ñà‚îÄ‚îÄ‚îÄ‚îÄ‚ñà‚îÄ‚îÄ‚îÄ‚ñà‚îÄ‚îÄ‚îÄ‚îÄ‚ñà‚îÄ‚îÄ‚îÄ‚îÄ‚ñà‚îÄ‚îÄ‚îÄ‚îÄ‚ñà
#                ‚ñà‚îÄ‚ñà‚ñà‚îÄ‚îÄ‚ñà‚îÄ‚ñà‚ñà‚îÄ‚ñà‚îÄ‚ñà‚ñà‚îÄ‚ñà‚îÄ‚ñà‚ñà‚îÄ‚ñà‚ñà‚îÄ‚ñà‚ñà‚îÄ‚ñà‚ñà‚îÄ‚ñà‚îÄ‚ñà‚ñà‚îÄ‚ñà‚îÄ‚ñà‚ñà‚îÄ‚ñà
#                ‚ñà‚îÄ‚ñà‚ñà‚îÄ‚îÄ‚ñà‚îÄ‚ñà‚ñà‚îÄ‚ñà‚îÄ‚îÄ‚îÄ‚îÄ‚ñà‚îÄ‚ñà‚ñà‚îÄ‚ñà‚ñà‚îÄ‚ñà‚ñà‚îÄ‚ñà‚ñà‚îÄ‚ñà‚îÄ‚îÄ‚îÄ‚îÄ‚ñà‚îÄ‚ñà‚ñà‚îÄ‚ñà
#                ‚ñà‚îÄ‚ñà‚ñà‚îÄ‚îÄ‚ñà‚îÄ‚ñà‚ñà‚îÄ‚ñà‚îÄ‚ñà‚îÄ‚ñà‚ñà‚îÄ‚ñà‚ñà‚îÄ‚ñà‚ñà‚îÄ‚ñà‚ñà‚îÄ‚ñà‚ñà‚îÄ‚ñà‚îÄ‚ñà‚îÄ‚ñà‚ñà‚îÄ‚ñà‚ñà‚îÄ‚ñà
#                ‚ñà‚îÄ‚îÄ‚îÄ‚îÄ‚ñà‚ñà‚îÄ‚îÄ‚îÄ‚îÄ‚ñà‚îÄ‚ñà‚îÄ‚ñà‚ñà‚îÄ‚îÄ‚îÄ‚îÄ‚ñà‚ñà‚îÄ‚ñà‚ñà‚îÄ‚îÄ‚îÄ‚îÄ‚ñà‚îÄ‚ñà‚îÄ‚ñà‚ñà‚îÄ‚îÄ‚îÄ‚îÄ‚ñà
#                ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà
#
# 						Copyright 2022 t.me/km90h
#             https://www.gnu.org/licenses/agpl-3.0.html
# meta banner: https://raw.githubusercontent.com/dorotorothequickend/DorotoroModules/main/banners/DorotoroLessonHelper.png
# meta developer: @DorotoroMods

from .. import loader, utils

# —á—Ç–æ–± –≤—ã –ø–æ–Ω–∏–º–∞–ª–∏ –∫–∞–∫–∏–µ —Ñ–æ—Ä–º—É–ª—ã "—Å–∫—Ä—ã–≤–∞—é—Ç—Å—è" –∑–∞ —Å—Å—ã–ª–∫–∞–º–∏
# –≥–µ–æ–º–µ—Ç—Ä–∏—è
skvadrata = "https://siasky.net/AABnq3U_b4CxYkVjVh87jE3mau4SjnKntiU0782cRsx3NA"
spryamougolnik = "https://siasky.net/CAAgSZbTSdM8UeCgfnDZVYhXujqSLOcPSW81dSQME_j0JQ"
sparallelogram = "https://siasky.net/IADZ9EjuHlGu60fHS1HvOo0dApOlx4T93dA0zXiS4DCwcA"
streugolnik = "https://siasky.net/EAAwSn4Xwii1dNtYF_CLGV1udyFWPdG1whoibXQ5WpEL9w"
spryamougotreugolnik = "https://siasky.net/KADH3gN4f1REnLL5L4WLSXhdA-CbIcWGYn1ODKGHMsm91w"
pkrug  = "https://siasky.net/KADidC2s2cIBNW5p6GbjW7vRIdFrIbgJpHOkOugSgT6kVw"
ppryamougol = "https://siasky.net/KABSyyC1Axb2EMDzf_xlmYXNUSh4MROAEz8ii38PxSO_uQ"
ptrapecia = "https://siasky.net/KACwTXDBUpMqzrpqKzL8dXdyZJqDmmG2E-kFZ4fLAYSTqA"
promb = "https://siasky.net/KABxZSMP9XVVIatBWqBINTMNiogEk4JW7jW3c5RG-23i3A"
trigonmetrfunctions = "https://siasky.net/IAAXyaHWrUGzq2TZWUk5ATzlyT_YCkS2G1trn8mMN0V3NQ"
cosandsin = "https://siasky.net/GAByXi2bfHBIuS5Gp0oY5su4t-aRJzCwQOUGgONRavi5PA"
grade11 = "https://siasky.net/zADEX_GSzVU0QsHHzfraIGbq_HoeNOhXtU9HmKDf2r97wQ"
trigontojdestvo = "https://siasky.net/NACOJn-CdHgWityIyCOu5vjnOz5VNYdgw3b8Nm6qhPSUHQ"
ninegrade9 = "https://siasky.net/TAAoqT4XPiUYCJBJzvLp0zlcO3piJgoIcZ2u4u7petdVFA"
teorematarkovskogo = "https://siasky.net/XABTwgCZpcQm2YimIwSWi7cMgHYUXBCKfB7uKEgQvvM0Bg"
teoremabelogo = "https://siasky.net/zABJOodp7aNRPaXdP6ua7gm7MyN1I-cmXyyFC19aYAWU1A"
teoremabogomolova = "https://siasky.net/zAB-eonLFG-lupBvdyWopdd2nlF1uqY4eDEhAppKgtcCmA"


# –∞–ª–≥–µ–±—Ä–∞
kvadratniykoren = "https://siasky.net/GABCbrtX3OiRbQDDucHaGaaplFBhYUbebLppdLdojEY5XA"
modulechisla = "https://siasky.net/EACFgp7NigsJ3e-xi99PRnX3_mqfY9rLHM6ZQdEzh46u2g"
logarifmhuev = "https://siasky.net/GAAvsMBOtQAXAumnLK8jv1VlWD8vucA7PEBqJirS9NstFg"
nmnojiteley = "https://siasky.net/IABN5_zf1U63V8ECsEVtF74QmekGv-XVQmnSyc4gaxUGMw"
naturpokazatstepen = "https://siasky.net/BADMhyN4iuLrsJVG_g9J6d-n7rIsgEz0WxWEXZw4A5xNmA"
chleni = "https://siasky.net/VACH8Jf2S_13l7r_IcdFPbe21RB7sw9c_ilYBW2CGoZ2sA"
skobkiopen = "https://siasky.net/DABKW6spjCK2NyMZ_uGF_r95AfHo_Qp5lStwJv_7RapTHQ"
sokrumnoj = "https://siasky.net/bAD0FecwgEqcB5BEVpLDB61sP03SDLOyQp1c1VfS1U4MCQ"
razlojeniemnojochlena = "https://siasky.net/ZADivN0aYnZLj5kGWi_zfUUd3GgRcw_SFsQA7Z5FI8Tupw"
pifagoravatablica = "https://siasky.net/RADrCFxTNBWiwFnKsmM7ZkoHNwVD00dIJLlVA8vS3cHYPA"
tablicaumnojenialol = "https://siasky.net/RAATbPvyU9CkjHZbzjizhuSan6nSB0dTpEr48fAIiunEpQ"
subfactorial = "https://siasky.net/AACA3CnnFKRl3UVQEXc5tvLdqXHwY9vFNgGWZtvm0lirpA"

# —Ä—É—Å—Å–∫–∏–π —è–∑—ã–∫ (–ø–æ–∫–∞ –º–∞–ª–æ–≤–∞—Ç–æ)
newithpolniikratkipril = "https://siasky.net/ZABLtZReoShkUzRQw4WR66JO0sJRjqHWGzrS3lxol6xu9g"
slitnanddeficenapispril = "https://siasky.net/jACJ1PRXCU3w2qyu_TwR5E7Zfz4RHmitqaiGJdRFgFw_KQ"
consonantinprichast = "https://siasky.net/VACAvcyCKLNS-4wvszVkQxsS4N33x7HvJWC3mf816EzyJw"
ayavprichastotglagolovatyat = "https://siasky.net/RACEYa_CzvB-NQR2rtBZW2QlkL6BRF9CnmBZMLj0NwN56w"
eieyovprichastiyax = "https://siasky.net/RACEYa_CzvB-NQR2rtBZW2QlkL6BRF9CnmBZMLj0NwN56w"
ninnvsuffpolnixstradat = "https://siasky.net/VABf4V4B8DcGKUzXfmF5OBfB-zd4dO4_EQAmF-oU8Zg53g"
newithglagol = "https://siasky.net/TAA4TgkaRvPtbe5z1vwoX3ox5mPpzfQouFXGiSUC2bowvw"
nvsuffkratkixstradatprich = "https://siasky.net/LACaIqH5llLiz2VwUsw2SmlDqbL746B_7HmCsjgeidFrJw"

# —Ñ–∏–∑–∏–∫–∞ –≥–¥–∑ –ø–æ —Ñ–∏–∑–∏–∫–µ –ø–µ—Ä—ã—à–∫–∏–Ω 8 –∫–ª–∞—Å—Å (potom eshe dobavly)
kolvoteploti = "https://siasky.net/BAA3xTqPl5qtN5DUSolZX-PVA0QB6qnNYTtnP6lxCBRm6g"
teplotilol = "https://siasky.net/FAAXFoK7AL0QtaY7KHggM7qwNCuZooOu_xkPupoLYm3iHA"
electronapryajandsilatoka = "https://siasky.net/OACjpGcIYMYVvk76fUWR_oIRsLoeiqMkz0pPOeMXM8rXoQ"
soprotyavlenieprovodnika = "https://siasky.net/IABGbvljXqNVd72u8KUCgQSxVy7eOWWtMzpopFtX3bHMBQ"
zakonoma = "https://siasky.net/IAD1oAhP2_O8qbS5IsNrCluawjIskGseNaFJiql4nuiBcA"


@loader.tds
class LessonHelper(loader.Module):
    """–í–∞—à –ª–∏—á–Ω—ã–π —Ä–µ–ø–µ—Ç–∏—Ç–æ—Ä!"""
    strings = {"name": "LessonHelper"}

    @loader.command()
    async def mathformcmd(self, message):
        "<—Ñ–æ—Ä–º—É–ª–∞/list> - –±–∞–∑–æ–≤—ã–µ —Ñ–æ—Ä–º—É–ª—ã –ø–æ –∞–ª–≥–µ–±—Ä–µ –∏ –≥–µ–æ–º–µ—Ç—Ä–∏–∏.\n\n–ß—Ç–æ–±—ã –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å —Å–ø–∏—Å–æ–∫ —Ñ–æ—Ä–º—É–ª –∏ —Ç–µ–æ—Ä–µ–º –≤–≤–µ–¥–∏—Ç–µ:\n.mathform list"
        args = utils.get_args_raw(message)
        if not args:
            await utils.answer(message, "<i>–í–≤–µ–¥–∏—Ç–µ —Ç–æ—á–Ω–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ —Ñ–æ—Ä–º—É–ª—ã/–ø—Ä–∞–≤–∏–ª–∞/—Ç–µ–æ—Ä–µ–º—ã –∏–ª–∏ –∂–µ –ø—Ä–æ–≤–µ—Ä—å—Ç–µ –ø—Ä–∞–≤–∏–ª—å–Ω–æ—Å—Ç—å –Ω–∞–ø–∏—Å–∞–Ω–∏–µ.</i>\n<code>.mathform list</code> <b>—á—Ç–æ–±—ã –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å —Å–ø–∏—Å–æ–∫ —Ñ–æ—Ä–º—É–ª.</b>")
        else:
            await utils.answer(message, '<b>–ò—â—É...</b>')
        text = f"üé´ <b>–ö–æ–µ-—á—Ç–æ –Ω–∞—à–µ–ª:</b>\n<b><i>{args}</i></b>"
        if args == "list":
            await utils.answer(message, "<b><i>–°–ø–∏—Å–æ–∫ —Ñ–æ—Ä–º—É–ª –∏ —Ç–µ–æ—Ä–µ–º:</i></b>\n\n<b>–ì–µ–æ–º–µ—Ç—Ä–∏—è:</b>\n\n–ü–ª–æ—â–∞–¥—å –∫–≤–∞–¥—Ä–∞—Ç–∞\n–ü–ª–æ—â–∞–¥—å –ø—Ä—è–º–æ—É–≥–æ–ª—å–Ω–∏–∫–∞\n–ü–ª–æ—â–∞–¥—å –ø–∞—Ä–∞–ª–ª–µ–ª–æ–≥—Ä–∞–º–∞\n–ü–ª–æ—â–∞–¥—å —Ç—Ä–µ—É–≥–æ–ª—å–Ω–∏–∫–∞\n–ü–µ—Ä–∏–º–µ—Ç—Ä –∫—Ä—É–≥–∞\n–ü–µ—Ä–∏–º–µ—Ç—Ä –ø—Ä—è–º–æ—É–≥–æ–ª—å–Ω–∏–∫–∞\n–ü–µ—Ä–∏–º–µ—Ç—Ä —Ç—Ä–∞–ø–µ—Ü–∏–∏\n–ü–µ—Ä–∏–º–µ—Ç—Ä —Ä–æ–º–±–∞\n–¢—Ä–∏–≥–æ–Ω–æ–º–µ—Ç—Ä–∏—á–µ—Å–∫–∏–µ —Ñ—É–Ω–∫—Ü–∏–∏\n–ö–æ—Å–∏–Ω—É—Å –∏ —Å–∏–Ω—É—Å\n–§–æ—Ä–º—É–ª—ã –∑–∞ 11 –∫–ª–∞—Å—Å\n–¢—Ä–∏–≥–æ–Ω–æ–º–µ—Ç—Ä–∏—á–µ—Å–∫–æ–µ —Ç–æ–∂–¥–µ—Å—Ç–≤–æ\n–§–æ—Ä–º—É–ª—ã –∑–∞ 9 –ö–ª–∞—Å—Å\n–¢–µ–æ—Ä–µ–º–∞ –¢–∞—Ä–∫–æ–≤—Å–∫–æ–≥–æ\n–¢–µ–æ—Ä–µ–º–∞ –ë–µ–ª–æ–≥–æ\n–¢–µ–æ—Ä–µ–º–∞ –ë–æ–≥–æ–º–æ–ª–æ–≤–∞\n\n<b>–ê–ª–≥–µ–±—Ä–∞:</b>\n\n–ö–≤–∞–¥—Ä–∞—Ç–Ω—ã–π –ö–æ—Ä–µ–Ω—å\n–ú–æ–¥—É–ª—å —á–∏—Å–ª–∞\n–õ–æ–≥–∞—Ä–∏—Ñ–º\nN –º–Ω–æ–∂–∏—Ç–µ–ª–µ–π\n–°–≤–æ–π—Å—Ç–≤–∞ —Å—Ç–µ–ø–µ–Ω–µ–π —Å –Ω–∞—Ç—É—Ä–∞–ª—å–Ω—ã–º–∏ –ø–æ–∫–∞–∑–∞—Ç–µ–ª—è–º–∏\n–ú–Ω–æ–≥–æ—á–ª–µ–Ω—ã –∏ –æ–¥–Ω–æ—á–ª–µ–Ω—ã\n–ü—Ä–∞–≤–∏–ª–æ —Ä–∞—Å–∫—Ä—ã—Ç–∏—è —Å–∫–æ–±–æ–∫\n–§–æ—Ä–º—É–ª—ã —Å–æ–∫—Ä–∞—â–µ–Ω–Ω–æ–≥–æ —É–º–Ω–æ–∂–µ–Ω–∏—è\n–†–∞–∑–ª–æ–∂–µ–Ω–∏–µ –º–Ω–æ–≥–æ—á–ª–µ–Ω–∞\n–¢–∞–±–ª–∏—Ü–∞ –ü–∏—Ñ–∞–≥–æ—Ä–∞\n–¢–∞–±–ª–∏—Ü–∞ –£–º–Ω–æ–∂–µ–Ω–∏—è\n–°—É–±—Ñ–∞–∫—Ç–æ—Ä–∏–∞–ª")
        elif args == "–ü–ª–æ—â–∞–¥—å –∫–≤–∞–¥—Ä–∞—Ç–∞" or args == "–ø–ª–æ—â–∞–¥—å –∫–≤–∞–¥—Ä–∞—Ç–∞" or args == "–ø–ª–æ—â–∞–¥—å –ö–≤–∞–¥—Ä–∞—Ç–∞" or args == "gkjoflm rdflhfnf":
            if message.out:
                await message.delete()
            photo = await self._client.send_file(message.to_id, skvadrata, caption=text)
            upload = await self._client.upload_file(await self._client.download_file(photo, bytes))
        elif args == "–ü–ª–æ—â–∞–¥—å –ø—Ä—è–º–æ—É–≥–æ–ª—å–Ω–∏–∫–∞" or args == "S –ø—Ä—è–º–æ—É–≥–æ–ª—å–Ω–∏–∫–∞" or args == "gkjoflm ghzvjeujkmybrf" or args == "Gkjoflm ghzvjeukmybrf" or args == "–ø–ª–æ—â–∞–¥—å –ø—Ä—è–º–æ—É–≥–æ–ª—å–Ω–∏–∫–∞" or args == "–∫—Ç–æ —ç—Ç–æ —á–∏—Ç–∞–µ—Ç –ª–æ—à–ø–µ–¥" or args == "–ü–õ–û–©–ê–î–¨ –ü–†–Ø–ú–û–£–ì–û–õ–¨–ù–ò–ö–ê":
            if message.out:
                await message.delete()
            photo = await self._client.send_file(message.to_id, spryamougolnik, caption=text)
            upload = await self._client.upload_file(await self._client.download_file(photo, bytes))
        elif args == "–ü–ª–æ—â–∞–¥—å –ø–∞—Ä–∞–ª–ª–µ–ª–æ–≥—Ä–∞–º–∞" or args == "–ø–ª–æ—â–∞–¥—å –ø–∞—Ä–∞–ª–ª–µ–ª–æ–≥—Ä–∞–º–∞" or args == "–ü–ª–æ—â–∞–¥—å –ø–∞—Ä–∞–ª–µ–ª–ª–æ–≥—Ä–∞–º–∞" or args == "–ø–ª–æ—â–∞–¥—å –ø–∞—Ä–∞–ª–µ–ª–ª–æ–≥—Ä–∞–º–∞" or args == "–ü–õ–û–©–ê–î–¨ –ü–ê–†–ê–õ–õ–ï–õ–û–ì–†–ê–ú–ê" or args == "Gkjoflm gfhfkktkjuhfvf":
            if message.out:                
                await message.delete()
            photo = await self._client.send_file(message.to_id, sparallelogram, caption=text)
            upload = await self._client.upload_file(await self._client.download_file(photo, bytes))
        elif args == "–ü–ª–æ—â–∞–¥—å —Ç—Ä–µ—É–≥–æ–ª—å–Ω–∏–∫–∞" or args == "Gkjoflm nhteujkmybrf" or args == "gkjoflm nhteujkmybrf" or args == "–ø–ª–æ—â–∞–¥—å —Ç—Ä–µ—É–≥–æ–ª—å–Ω–∏–∫–∞" or args == "–¢—Ä–µ—É–≥–æ–ª—å–Ω–∏–∫–∞ –ø–ª–æ—â–∞–¥—å" or args == "S —Ç—Ä–µ—É–≥–æ–ª—å–Ω–∏–∫–∞" or args == "s —Ç—Ä–µ—É–≥–æ–ª—å–Ω–∏–∫–∞":
            if message.out:
                await message.delete()
            photo = await self._client.send_file(message.to_id, streugolnik, caption=text)
            upload = await self._client.upload_file(await self._client.download_file(photo, bytes))
        elif args == "–ü–µ—Ä–∏–º–µ—Ç—Ä –∫—Ä—É–≥–∞" or args == "–¥–∏–∞–º–µ—Ç—Ä –∫—Ä—É–≥–∞" or args == "–ø–µ—Ä–∏–º–µ—Ç—Ä –ö—Ä—É–≥–∞" or args == "–ü–µ—Ä–∏–º–µ—Ç—Ä –ö—Ä—É–≥–∞" or args == "–ü–ï–†–ò–ú–ï–¢–† –ö–†–£–ì–ê" or args == "–î–∏–∞–º–µ—Ç—Ä –∫—Ä—É–≥–∞":
            if message.out:
                await message.delete()
            photo = await self._client.send_file(message.to_id, pkrug, caption=text)
            upload = await self._client.upload_file(await self._client.download_file(photo, bytes))
        elif args == "–ü–µ—Ä–∏–º–µ—Ç—Ä –ø—Ä—è–º–æ—É–≥–æ–ª—å–Ω–∏–∫–∞" or args == "–ø–ª–æ—â–∞–¥—å –ø—Ä—è–º–æ—É–≥–æ–ª—å–Ω–∏–∫–∞" or args == "–≥–µ–æ–º–µ—Ç—Ä–∏—è –≥–æ–≤–Ω–æ" or args == "–ü–ª–æ—â–∞–¥—å –ü—Ä—è–º–æ—É–≥–æ–ª—å–Ω–∏–∫–∞" or args == "–ü–õ–û–©–ê–î–¨ –ü–†–Ø–ú–û–£–ì–û–õ–¨–ù–ò–ö–ê" or args == "–ø–ª–æ—â–∞–¥—å –ü—Ä—è–º–æ—É–≥–æ–ª—å–Ω–∏–∫–∞" or args == "–ü–ª–æ—â–∞–ª—å –ü–†–Ø–ú–û–£–ì–û–õ–¨–ù–ò–ö–ê":
            if message.out:
                await message.delete()
            photo = await self._client.send_file(message.to_id, ppryamougol, caption=text)
            upload = await self._client.upload_file(await self._client.download_file(photo, bytes))
        elif args == "–ü–µ—Ä–∏–º–µ—Ç—Ä —Ç—Ä–∞–ø–µ—Ü–∏–∏" or args == "–ø–µ—Ä–∏–º–µ—Ç—Ä —Ç—Ä–∞–ø–µ—Ü–∏–∏" or args == "–ü–ï–†–ò–ú–ï–¢–† –¢–†–ê–ü–ï–¶–ò–ò" or args == "–º–∏—à–∞ —Å–æ—Å–µ—Ç —á–ª–µ–Ω" or args == "P —Ç—Ä–∞–ø–µ—Ü–∏–∏" or args == "–ø–µ—Ä–∏–º–µ—Ç—Ä –¢—Ä–∞–ø–µ—Ü–∏–∏" or args == "–ü–µ—Ä–∏–º–µ—Ç—Ä –¢–†–ê–ü–ï–¶–ò–ò":
            if message.out:
                await message.delete()
            photo = await self._client.send_file(message.to_id, ptrapecia, caption=text)
            upload = await self._client.upload_file(await self._client.download_file(photo, bytes))
        elif args == "–ü–µ—Ä–∏–º–µ—Ç—Ä —Ä–æ–º–±–∞" or args == "–ø–µ—Ä–∏–º–µ—Ç—Ä —Ä–æ–º–±–∞" or args == "–ü–ï–†–ò–ú–ï–¢–† –†–û–ú–ë–ê" or args == "–ø–µ—Ä–∏–º–µ—Ç—Ä –†–æ–º–±–∞" or args == "gthbvtnh hjv,f" or args == "@DorotoroMods" or args == "–ø–µ—Ä–∏–º–µ—Ç—Ä —Ö—É–π–Ω–∏":
            if message.out:
                await message.delete()
            photo = await self._client.send_file(message.to_id, promb, caption=text)
            upload = await self._client.upload_file(await self._client.download_file(photo, bytes))
        elif args == "–°—É–±—Ñ–∞–∫—Ç–æ—Ä–∏–∞–ª" or args == "—Å—É–±—Ñ–∞–∫—Ç–æ—Ä–∏–∞–ª" or args == "!" or args == "—Å—É–±–§–ê–ö–¢–û–†–ò–ê–õ" or args == "–°–£–ë–§–ê–ö–¢–û–†–ò–ê–õ" or args == "–≤–æ—Å–∫–ª–∏—Ü–∞—Ç–µ–ª—å–Ω—ã–π –∑–Ω–∞–∫" or args == "—è—Å–æ—Å—É—á–ª–µ–Ω":
            if message.out:
                await message.delete()
            photo = await self._client.send_file(message.to_id, subfactorial, caption=text)
            upload = await self._client.upload_file(await self._client.download_file(photo, bytes))
        elif args == "–¢—Ä–∏–≥–æ–Ω–æ–º–µ—Ç—Ä–∏—á–µ—Å–∫–∏–µ –§—É–Ω–∫—Ü–∏–∏" or args == "–¢—Ä–∏–≥–æ–Ω–æ–º–µ—Ç—Ä–∏—á–µ—Å–∫–∏–µ —Ñ—É–Ω–∫—Ü–∏–∏" or args == "—Ç—Ä–∏–≥–æ–Ω–æ–º–µ—Ç—Ä–∏—á–µ—Å–∫–∏–µ —Ñ—É–Ω–∫—Ü–∏–∏" or args == "—Ç—Ä–∏–≥–æ–Ω–æ–º–µ—Ç—Ä–∏—á–µ—Å–∫–∏–µ –§—É–Ω–∫—Ü–∏–∏" or args == "–¢–†–ò–ì–û–ù–û–ú–ï–¢–†–ò–ß–ï–°–ö–ò–ï —Ñ—É–Ω–∫—Ü–∏–∏"  or args == "–¢—Ä–∏–≥–µ–Ω–æ–º–µ—Ç—Ä–∏—á" or args == "–¢—Ä–∏–≥–∞–Ω" or args == "–∫—Å—Ç–∞ –Ω–µ–∫—Å—Ç –±—É–¥–µ—Ç –æ–±–Ω–æ–≤–∞ —ç–º–¥–∂–≤–∏–∞—Ç–µ–∫—Å—Ç" or args == "–¢–†–ò–ì–û–ù–û–ú–ï–¢–†–ò–ß–ï–°–ö–ò–ï –§–£–ù–ö–¶–ò–ò":
            if message.out:
                await message.delete()
            photo = await self._client.send_file(message.to_id, trigonmetrfunctions, caption=text)
            upload = await self._client.upload_file(await self._client.download_file(photo, bytes))
        elif args == "–°–∏–Ω—É—Å" or args == "–ö–æ—Å–∏–Ω—É—Å" or args == "–°–∏–Ω—É—Å –∏ –ö–æ—Å–∏–Ω—É—Å" or args == "—Å–∏–Ω—É—Å –∏ –∫–æ—Å–∏–Ω—É—Å" or args == "–∫–æ—Å–∏–Ω—É—Å" or args == "—Å–∏–Ω—É—Å" or args == "–°–ò–ù–£–°" or args == "–ö–û–°–ò–ù–£–°" or args == "–ö–æ—Å–∏–Ω—É—Å –∏ —Å–∏–Ω—É—Å" or args == "–∫–æ—Å–∏–Ω—É—Å –∏ —Å–∏–Ω—É—Å":
            if message.out:
                await message.delete()
            photo = await self._client.send_file(message.to_id, cosandsin, caption=text)
            upload = await self._client.upload_file(await self._client.download_file(photo, bytes))
        elif args == "–§–æ—Ä–º—É–ª—ã 11 –∫–ª–∞—Å—Å" or args == "11 –∫–ª–∞—Å—Å" or args == "—Ñ–æ—Ä–º—É–ª—ã 11 –∫–ª–∞—Å—Å" or args == "—Ñ–æ—Ä–º—É–ª—ã 11" or args == "—Ñ–æ—Ä–º—É–ª—ã –∫–ª–∞—Å—Å 11" or args == "–§–æ—Ä–º—É–ª—ã –∑–∞ 11 –∫–ª–∞—Å—Å" or args == "–§–û–†–ú–£–õ–´ –ó–ê 11 –ö–õ–ê–°–°" or args == "—Ñ–æ—Ä–º—É–ª—ã –∑–∞ 11 –∫–ª–∞—Å—Å" or args == "11 –∫–ª–∞—Å—Å –µ–ø—Ç–∞":
            if message.out:
                await message.delete()
            photo = await self._client.send_file(message.to_id, grade11, caption=text)
            upload = await self._client.upload_file(await self._client.download_file(photo, bytes))
        elif args == "—Ç—Ä–∏–≥–æ–Ω–æ–º–µ—Ç—Ä–∏—á–µ—Å–∫–æ–µ —Ç–æ–∂–¥–µ—Å—Ç–≤–æ" or args == "–¢—Ä–∏–≥–æ–Ω–æ–º–µ—Ç—Ä–∏—á–µ—Å–∫–æ–µ —Ç–æ–∂–¥–µ—Å—Ç–≤–æ" or args == "—Ç–æ–∂–¥–µ—Å—Ç–≤–æ" or args == "–¢—Ä–∏–≥–æ–Ω–æ–º–µ—Ç—Ä–∏—á–µ—Å–∫–æ–µ –¢–æ–∂–¥–µ—Å—Ç–≤–æ" or args == "–¢–æ–∂–¥–µ—Å—Ç–≤–æ —Ç—Ä–∏–≥–æ–Ω–æ–º–µ—Ç—Ä–∏—á–µ—Å–∫–æ–µ" or args == "–¢—Ä–∏–≥–æ–Ω–æ–º–µ—Ç—Ä–∏—á–µ—Å–∫–æ–µ" or args == "—Ç—Ä–∏–≥–æ–Ω–æ–º–µ—Ç—Ä–∏—á–µ—Å–∫–æ–µ —Ç–æ–∂–¥" or args == "—Ç—Ä–∏–≥–∞–Ω –¥" or args == "—Ç—Ä–∏–≥–æ–Ω–æ–º–µ—Ç—Ä–∏—á–µ—Å–∫–æ–µ –¢–æ–∂–¥–µ—Å—Ç–≤–æ":
            if message.out:
                await message.delete()
            photo = await self._client.send_file(message.to_id, trigontojdestvo, caption=text)
            upload = await self._client.upload_file(await self._client.download_file(photo, bytes))
        elif args == "9 –∫–ª–∞—Å—Å" or args == "–§–æ—Ä–º—É–ª—ã –∑–∞ 9 –∫–ª–∞—Å—Å" or args == "—Ñ–æ—Ä–º—É–ª—ã 9 –∫–ª–∞—Å—Å" or args == "—Ñ–æ—Ä–º—É–ª—ã –æ–≥—ç" or args == "—Ñ–æ—Ä–º—É–ª—ã –∑–∞ 9 –∫–ª–∞—Å—Å" or args == "9 –∫–ª–∞—Å—Å —Ñ–æ—Ä–º—É–ª—ã" or args == "9 –∫–ª–∞—Å—Å —Ñ–æ—Ä–º—É–ª—ã –≥–µ–æ–º–µ—Ç—Ä–∏—è" or args == "9 –∫–ª–∞—Å—Å –§–æ—Ä–º—É–ª—ã" or args == "–§–æ—Ä–º—É–ª—ã 9" or args == "–§–æ—Ä–º—É–ª—ã –∑–∞ 9 –ö–ª–∞—Å—Å":
            if message.out:
                await message.delete()
            photo = await self._client.send_file(message.to_id, ninegrade9, caption=text)
            upload = await self._client.upload_file(await self._client.download_file(photo, bytes))
        elif args == "–¢–µ–æ—Ä–µ–º–∞ –¢–∞—Ä–∫–æ–≤—Å–∫–æ–≥–æ" or args == "—Ç–∞—Ä–∫–æ–≤—Å–∫–∏–π" or args == "—Ç–µ–æ—Ä–µ–º–∞ —Ç–∞—Ä–∫–æ–≤—Å–∫–æ–≥–æ":
            if message.out:
                await message.delete()
            photo = await self._client.send_file(message.to_id, teorematarkovskogo, caption=text)
            upload = await self._client.upload_file(await self._client.download_file(photo, bytes))
        elif args == "–¢–µ–æ—Ä–µ–º–∞ –ë–µ–ª–æ–≥–æ" or args == "–±–µ–ª—ã–π" or args == "—Ç–µ–æ—Ä–µ–º–∞ –±–µ–ª–æ–≥–æ":
            if message.out:
                await message.delete()
            photo = await self._client.send_file(message.to_id, teoremabelogo, caption=text)
            upload = await self._client.upload_file(await self._client.download_file(photo, bytes))
        elif args == "–¢–µ–æ—Ä–µ–º–∞ –ë–æ–≥–æ–º–æ–ª–æ–≤–∞" or args == "–±–æ–≥–æ–º–æ–ª–æ–≤" or args == "—Ç–µ–æ—Ä–µ–º–∞ –±–æ–≥–æ–º–æ–ª–æ–≤":
            if message.out:
                await message.delete()
            photo = await self._client.send_file(message.to_id, teoremabogomolova, caption=text)
            upload = await self._client.upload_file(await self._client.download_file(photo, bytes))
        elif args == "–∫–≤–∞–¥—Ä–∞—Ç–Ω—ã–π –∫–æ—Ä–µ–Ω—å" or args == "–ö–≤–∞–¥—Ä–∞—Ç–Ω—ã–π –∫–æ—Ä–µ–Ω—å" or args == "–∫–æ—Ä–µ–Ω—å" or args == "–ö–æ—Ä–µ–Ω—å" or args == "–∫–æ—Ä–µ–Ω—å –∫–≤–∞–¥—Ä–∞—Ç–Ω—ã–π" or args == "‚àö" or args == "–ö–≤–∞–¥—Ä–∞—Ç–Ω—ã–π –ö–æ—Ä–µ–Ω—å":
            if message.out:
                await message.delete()
            photo = await self._client.send_file(message.to_id, kvadratniykoren, caption=text)
            upload = await self._client.upload_file(await self._client.download_file(photo, bytes))
        elif args == "–ú–æ–¥—É–ª—å —á–∏—Å–ª–∞" or args == "–º–æ–¥—É–ª—å" or args == "–º–æ–¥—É–ª—å —á–∏—Å–ª–∞" or args == "||" or args == "—á–∏—Å–ª–æ–≤–æ–π –º–æ–¥—É–ª—å":
            if message.out:
                await message.delete()
            photo = await self._client.send_file(message.to_id, modulechisla, caption=text)
            upload = await self._client.upload_file(await self._client.download_file(photo, bytes))
        elif args == "–õ–û–ì–ê–†–ò–§–ú" or args == "–õ–æ–≥–∞—Ä–∏—Ñ–º" or args == "–ª–æ–≥–æ—Ä–∏—Ñ–º" or args == "–õ–û–ì–û–†–ò–§–ú" or args == "–ª–æ–≥–∞—Ä–∏—Ñ–º":
            if message.out:
                await message.delete()
            photo = await self._client.send_file(message.to_id, logarifmhuev, caption=text)
            upload = await self._client.upload_file(await self._client.download_file(photo, bytes))
        elif args == "–º–Ω–æ–∂–∏—Ç–µ–ª–µ–π" or args == "N –º–Ω–æ–∂–∏—Ç–µ–ª–µ–π" or args == "n" or args == "N" or args == "n –º–Ω–æ–∂–∏—Ç–µ–ª–µ–π" or args == "–ú–Ω–æ–∂–∏—Ç–µ–ª–µ–π":
            if message.out:
                await message.delete()
            photo = await self._client.send_file(message.to_id, nmnojiteley, caption=text)
            upload = await self._client.upload_file(await self._client.download_file(photo, bytes))
        elif args == "—Å–≤–æ–π—Å—Ç–≤–∞ —Å—Ç–µ–ø–µ–Ω–µ–π" or args == "–°–≤–æ–π—Å—Ç–≤–∞ –°—Ç–µ–ø–µ–Ω–µ–π" or args == "—Å–≤–æ–π—Å—Ç–≤–∞ —Å—Ç–µ–ø–µ–Ω–µ–π —Å –Ω–∞—Ç—É—Ä–∞–ª—å–Ω—ã–º–∏ –ø–æ–∫–∞–∑–∞—Ç–µ–ª—è–º–∏" or args == "–°–≤–æ–π—Å—Ç–≤–∞ —Å—Ç–µ–ø–µ–Ω–µ–π —Å –Ω–∞—Ç—É—Ä–∞–ª—å–Ω—ã–º–∏ –ø–æ–∫–∞–∑–∞—Ç–µ–ª—è–º–∏" or args == "–°—Ç–µ–ø–µ–Ω–∏ —Å –Ω–∞—Ç—É—Ä–∞–ª—å–Ω—ã–º–∏ –ø–æ–∫–∞–∑–∞—Ç–µ–ª—è–º–∏" or args == "—Å–≤–æ–π—Å—Ç–≤–∞ —Å—Ç–µ–ø–µ–Ω–µ–π":
            if message.out:
                await message.delete()
            photo = await self._client.send_file(message.to_id, naturpokazatstepen, caption=text)
            upload = await self._client.upload_file(await self._client.download_file(photo, bytes))
        elif args == "–ú–Ω–æ–≥–æ—á–ª–µ–Ω" or args == "–û–¥–Ω–æ—á–ª–µ–Ω" or args == "–ú–Ω–æ–≥–æ—á–ª–µ–Ω—ã" or args == "–û–¥–Ω–æ—á–ª–µ–Ω—ã" or args == "–æ–¥–Ω–æ—á–ª–µ–Ω—ã" or args == "–º–Ω–æ–≥–æ—á–ª–µ–Ω—ã" or args == "–º–Ω–æ–≥–æ—á–ª–µ–Ω" or args == "–æ–¥–Ω–æ—á–ª–µ–Ω" or args == "–ú–Ω–æ–≥–æ—á–ª–µ–Ω—ã –∏ –æ–¥–Ω–æ—á–ª–µ–Ω—ã" or args == "–º–Ω–æ–≥–æ—á–ª–µ–Ω—ã –∏ –æ–¥–Ω–æ—á–ª–µ–Ω—ã" or args == "–û–¥–Ω–æ—á–ª–µ–Ω—ã –∏ –º–Ω–æ–≥–æ—á–ª–µ–Ω—ã" or args == "–æ–¥–Ω–æ—á–ª–µ–Ω—ã –∏ –º–Ω–æ–≥–æ—á–ª–µ–Ω—ã":
            if message.out:
                await message.delete()
            photo = await self._client.send_file(message.to_id, chleni, caption=text)
            upload = await self._client.upload_file(await self._client.download_file(photo, bytes))
        elif args == "–ü—Ä–∞–≤–∏–ª–æ –æ—Ç–∫—Ä—ã—Ç–∏—è —Å–∫–æ–±–æ–∫" or args == "–æ—Ç–∫—Ä—ã—Ç–∏–µ —Å–∫–æ–±–æ–∫" or args == "—Ä–∞—Å–∫—Ä—ã—Ç–∏–µ —Å–∫–æ–±–æ–∫" or args == "–û—Ç–∫—Ä—ã—Ç–∏–µ —Å–∫–æ–±–æ–∫" or args == "–ø—Ä–∞–≤–∏–ª–æ –æ—Ç–∫—Ä—ã—Ç–∏—è —Å–∫–æ–±–æ–∫" or args == "–ø—Ä–∞–≤–∏–ª–æ —Ä–∞—Å–∫—Ä—ã—Ç–∏—è —Å–∫–æ–±–æ–∫" or args == "–°–∫–æ–±–∫–∏" or args == "—Å–∫–æ–±–∫–∏" or args == "–û—Ç–∫—Ä—ã—Ç–∏–µ —Å–∫–æ–±–æ–∫" or args == "–æ—Ç–∫—Ä—ã—Ç–∏–µ –°–∫–æ–±–æ–∫" or args == "–æ—Ç–∫—Ä—ã—Ç–∏–µ —Å–∫–æ–±–æ–∫" or args == "–ü—Ä–∞–≤–∏–ª–æ —Ä–∞—Å–∫—Ä—ã—Ç–∏—è —Å–∫–æ–±–æ–∫" or args == "–ø—Ä–∞–≤–∏–ª–æ —Ä–∞—Å–∫—Ä—ã—Ç–∏—è —Å–∫–æ–±–æ–∫":
            if message.out:
                await message.delete()
            photo = await self._client.send_file(message.to_id, skobkiopen, caption=text)
            upload = await self._client.upload_file(await self._client.download_file(photo, bytes))
        elif args == "—Ñ–æ—Ä–º—É–ª—ã —Å–æ–∫—Ä–∞—â–µ–Ω–Ω–æ–≥–æ —É–º–Ω–æ–∂–µ–Ω–∏—è" or args == "—Å–æ–∫—Ä–∞—â–µ–Ω–Ω–æ–µ —É–º–Ω–æ–∂–µ–Ω–∏–µ" or args == "–°–æ–∫—Ä–∞—â–µ–Ω–Ω–æ–µ —É–º–Ω–æ–∂–µ–Ω–∏–µ" or args == "–§–æ—Ä–º—É–ª–∞ —Å–æ–∫—Ä–∞—â–µ–Ω–Ω–æ–≥–æ —É–º–Ω–æ–∂–µ–Ω–∏—è" or args == "—Ñ–æ—Ä–º—É–ª–∞ —Å–æ–∫—Ä–∞—â–µ–Ω–Ω–æ–≥–æ —É–º–Ω–æ–∂–µ–Ω–∏—è" or args == "—É–º–Ω–æ–∂–µ–Ω–∏–µ" or args == "–§–æ—Ä–º—É–ª–∞ —É–º–Ω–æ–∂–µ–Ω–∏—è" or args == "—Ñ–æ—Ä–º—É–ª–∞ —É–º–Ω–æ–∂–µ–Ω–∏—è" or args == "—É–º–Ω–∞–∂–µ–Ω–∏–µ" or args == "–£–º–Ω–∞–∂–µ–Ω–∏–µ" or args == "–§–æ—Ä–º—É–ª—ã —Å–æ–∫—Ä–∞—â–µ–Ω–Ω–æ–≥–æ —É–º–Ω–æ–∂–µ–Ω–∏—è" or args == "—Ñ–æ—Ä–º—É–ª—ã —Å–æ–∫—Ä–∞—â–µ–Ω–Ω–æ–≥–æ —É–º–Ω–æ–∂–µ–Ω–∏—è":
            if message.out:
                await message.delete()
            photo = await self._client.send_file(message.to_id, sokrumnoj, caption=text)
            upload = await self._client.upload_file(await self._client.download_file(photo, bytes))
        elif args == "–†–∞–∑–ª–æ–∂–µ–Ω–∏–µ –º–Ω–æ–≥–æ—á–ª–µ–Ω–∞" or args == "—Ä–æ–∑–ª–æ–∂–µ–Ω–∏–µ –º–Ω–æ–≥–æ—á–ª–µ–Ω–∞" or args == "—Ä–∞–∑–ª–æ–∂–µ–Ω–∏–µ –º–Ω–æ–≥–æ—á–ª–µ–Ω–∞" or args == "–†–∞–∑–ª–æ–∂–µ–Ω–∏–µ" or args == "—Ä–∞–ª–æ–∂–µ–Ω–∏–µ –º–Ω–æ–≥–æ—á–ª–µ–Ω":
            if message.out:
                await message.delete()
            photo = await self._client.send_file(message.to_id, razlojeniemnojochlena, caption=text)
            upload = await self._client.upload_file(await self._client.download_file(photo, bytes))
        elif args == "–¢–∞–±–ª–∏—Ü–∞ –ü–∏—Ñ–∞–≥–æ—Ä–∞" or args == "–¢–∞–±–ª–∏—Ü–∞ –ø–∏—Ñ–∞–≥–æ—Ä–∞" or args == "—Ç–∞–±–ª–∏—Ü–∞ –ø–∏—Ñ–∞–≥–æ—Ä–∞" or args == "—Ç–∞–±–ª–∏—Ü–∞ –ü–∏—Ñ–∞–≥–æ—Ä–∞" or args == "–ø–∏—Ñ–∞–≥–æ—Ä–æ–≤–∞ —Ç–∞–±–ª–∏—Ü–∞" or args == "—Ç–∞–±–ª–æ –ø–∏—Ñ–∞–≥–æ—Ä–∞" or args == "–ü–∏—Ñ–∞–≥–æ—Ä" or args == "–ø–∏—Ñ–æ–≥–æ—Ä–æ–≤—ã —à—Ç–∞–Ω—ã –≤–æ –≤—Å–µ —Å—Ç–æ—Ä–æ–Ω—ã —Ä–∞–≤–Ω—ã" or args == "—Ç–æ–±–ª–∏—Ü–∞ –ø–∏—Ñ–∞–≥–æ—Ä–∞" or args == "–ü–∏—Ñ–∞–≥–æ—Ä–∞ —Ç–∞–±–ª–∏—Ü–∞":
            if message.out:
                await message.delete()
            photo = await self._client.send_file(message.to_id, pifagoravatablica, caption=text)
            upload = await self._client.upload_file(await self._client.download_file(photo, bytes))        
        elif args == "–¢–∞–±–ª–∏—Ü–∞ —É–º–Ω–æ–∂–µ–Ω–∏—è" or args == "—Ç–∞–±–ª–∏—Ü–∞ —É–º–Ω–æ–∂–µ–Ω–∏—è" or args == "—Ç–∞–±–ª–∏—Ü–∞ –£–º–Ω–æ–∂–µ–Ω–∏—è" or args == "–¢–ê–ë–õ–ò–¶–ê –£–ú–ù–û–ñ–ï–ù–ò–Ø" or args == "–¢–∞–±–ª–∏—Ü–∞ –£–º–Ω–æ–∂–µ–Ω–∏—è":
            if message.out:
                await message.delete()
            photo = await self._client.send_file(message.to_id, tablicaumnojenialol, caption=text)
            upload = await self._client.upload_file(await self._client.download_file(photo, bytes))
        else:
            await utils.answer(message, "<i>–ù–∏—á–µ–≥–æ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ.\n–ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø—Ä–∞–≤–∏–ª—å–Ω–æ—Å—Ç—å –Ω–∞–ø–∏—Å–∞–Ω–∏—è –Ω–∞–∑–≤–∞–Ω–∏—è –ø—Ä–∞–≤–∏–ª–∞ –∏–ª–∏ –æ—Ä—Ñ–æ–≥—Ä–∞–º–º—ã.</i>\n<tg-spoiler>–ò–ª–∏ –∂–µ –≤–≤–µ–¥–∏—Ç–µ .mathform list\n—á—Ç–æ–±—ã –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å —Å–ø–∏—Å–æ–∫ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –ø—Ä–∞–≤–∏–ª.</tg-spoiler>")

    
    @loader.command()
    async def physformcmd(self, message):
        "<—Ñ–æ—Ä–º—É–ª–∞/list> - –±–∞–∑–æ–≤—ã–µ —Ñ–æ—Ä–º—É–ª—ã –ø–æ —Ñ–∏–∑–∏–∫–µ.\n\n–ß—Ç–æ–±—ã –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å —Å–ø–∏—Å–æ–∫ —Ñ–æ—Ä–º—É–ª –∏ —Ç–µ–æ—Ä–µ–º –≤–≤–µ–¥–∏—Ç–µ:\n.physform list"
        args = utils.get_args_raw(message)
        text = f"üé´ <b>–ö–æ–µ-—á—Ç–æ –Ω–∞—à–µ–ª:</b>\n<b><i>{args}</i></b>"
        if not args:
            await utils.answer(message, "<i>–í–≤–µ–¥–∏—Ç–µ —Ç–æ—á–Ω–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ —Ñ–æ—Ä–º—É–ª—ã/–ø—Ä–∞–≤–∏–ª–∞/—Ç–µ–æ—Ä–µ–º—ã –∏–ª–∏ –∂–µ –ø—Ä–æ–≤–µ—Ä—å—Ç–µ –ø—Ä–∞–≤–∏–ª—å–Ω–æ—Å—Ç—å –Ω–∞–ø–∏—Å–∞–Ω–∏–µ.</i>\n<code>.physform list</code> <b>—á—Ç–æ–±—ã –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å —Å–ø–∏—Å–æ–∫ —Ñ–æ—Ä–º—É–ª.</b>")
        else:
            await utils.answer(message, '<b>–ò—â—É...</b>')
        if args == "list":
            await utils.answer(message, "<b>–§–∏–∑–∏–∫–∞:</b>\n\n–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ç–µ–ø–ª–æ—Ç—ã –ø—Ä–∏ –Ω–∞–≥—Ä–µ–≤–∞–Ω–∏–∏\n–¢–µ–ø–ª–æ—Ç–∞ —Å–≥–æ—Ä–∞–Ω–∏—è\n–¢–µ–ø–ª–æ—Ç–∞ –ø–ª–∞–≤–ª–µ–Ω–∏—è\n–¢–µ–ø–ª–æ—Ç–∞ –ø–∞—Ä–æ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏—è\n–°–∏–ª–∞ —ç–ª–µ–∫—Ç—Ä–∏—á–µ—Å–∫–æ–≥–æ —Ç–æ–∫–∞\n–≠–ª–µ–∫—Ç—Ä–∏—á–µ—Å–∫–æ–µ –Ω–∞–ø—Ä—è–∂–µ–Ω–∏–µ\n–ó–∞–∫–æ–Ω –û–º–∞")
        elif args == "–ó–∞–∫–æ–Ω –û–º–∞" or args == "–∑–∞–∫–æ–Ω –æ–º–∞" or args == "–ó–∞–∫–æ–Ω" or args == "–∑–∞–∫–æ–Ω –û–º–∞":
            if message.out:
                await message.delete()
            photo = await self._client.send_file(message.to_id, zakonoma, caption=text)
            upload = await self._client.upload_file(await self._client.download_file(photo, bytes))
        elif args == "–¢–µ–ø–ª–æ—Ç–∞ —Å–≥–æ—Ä–∞–Ω–∏—è" or args == "—Ç–µ–ø–ª–æ—Ç–∞ —Å–≥–æ—Ä–∞–Ω–∏—è" or args == "–¢–µ–ø–ª–æ—Ç–∞ –ø–ª–∞–≤–ª–µ–Ω–∏—è" or args == "—Ç–µ–ø–ª–æ—Ç–∞ –ø–ª–∞–≤–ª–µ–Ω–∏—è" or args == "–¢–µ–ø–ª–æ—Ç–∞ –ø–∞—Ä–æ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏—è" or args == "—Ç–µ–ø–ª–æ—Ç–∞ –ø–∞—Ä–æ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏—è":
            if message.out:
                await message.delete()
            photo = await self._client.send_file(message.to_id, teplotilol, caption=text)
            upload = await self._client.upload_file(await self._client.download_file(photo, bytes))       
        elif args == "–°–∏–ª–∞ —ç–ª–µ–∫—Ç—Ä–∏—á–µ—Å–∫–æ–≥–æ —Ç–æ–∫–∞" or args == "—ç–ª–µ–∫—Ç—Ä–∏—á–µ—Å–∫–∏–π —Ç–æ–∫" or args == "—Å–∏–ª–∞ —ç–ª–µ–∫—Ç—Ä–∏—á–µ—Å–∫–æ–≥–æ —Ç–æ–∫–∞" or args == "–≠–ª–µ–∫—Ç—Ä–∏—á–µ—Å–∫–æ–µ –Ω–∞–ø—Ä—è–∂–µ–Ω–∏–µ" or args == "—ç–ª–µ–∫—Ç—Ä–∏—á–µ—Å–∫–æ–µ –Ω–∞–ø—Ä—è–∂–µ–Ω–∏–µ":
            if message.out:
                await message.delete()
            photo = await self._client.send_file(message.to_id, tablicaumnojenialol, caption=text)
            upload = await self._client.upload_file(await self._client.download_file(photo, bytes))         
        elif args == "–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ç–µ–ø–ª–æ—Ç—ã –ø—Ä–∏ –Ω–∞–≥—Ä–µ–≤–∞–Ω–∏–∏" or args == "–∫–æ–ª–≤–æ —Ç–µ–ø–ª–æ—Ç—ã –ø—Ä–∏ –Ω–∞–≥—Ä–µ–≤–∞–Ω–∏–∏" or args == "—Ç–µ–ø–ª–æ—Ç–∞ –ø—Ä–∏ –Ω–∞–≥—Ä–µ–≤–∞–Ω–∏–∏" or args == "–∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ç–µ–ø–ª–æ—Ç—ã –ø—Ä–∏ –Ω–∞–≥—Ä–µ–≤–∞–Ω–∏–∏":
            if message.out:
                await message.delete()
            photo = await self._client.send_file(message.to_id, kolvoteploti, caption=text)
            upload = await self._client.upload_file(await self._client.download_file(photo, bytes))
        else:
            await utils.answer(message, "<i>–ù–∏—á–µ–≥–æ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ.\n–ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø—Ä–∞–≤–∏–ª—å–Ω–æ—Å—Ç—å –Ω–∞–ø–∏—Å–∞–Ω–∏—è –Ω–∞–∑–≤–∞–Ω–∏—è –ø—Ä–∞–≤–∏–ª–∞ –∏–ª–∏ –æ—Ä—Ñ–æ–≥—Ä–∞–º–º—ã.</i>\n<tg-spoiler>–ò–ª–∏ –∂–µ –≤–≤–µ–¥–∏—Ç–µ .physform list\n—á—Ç–æ–±—ã –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å —Å–ø–∏—Å–æ–∫ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –ø—Ä–∞–≤–∏–ª.</tg-spoiler>")
    
    @loader.command()
    async def rusformcmd(self, message):
        "<–æ—Ä—Ñ–æ–≥—Ä–∞–º–º–∞/–ø—Ä–∞–≤–∏–ª–æ/list> - –±–∞–∑–æ–≤—ã–µ –ø—Ä–∞–≤–∏–ª–∞ –∏ –æ—Ä—Ñ–æ–≥—Ä–∞–º–º—ã –ø–æ —Ä—É—Å—Å–∫–æ–º—É —è–∑—ã–∫—É. –ë—É–¥–µ—Ç –ø–æ–ø–æ–ª–Ω—è—Ç—å—Å—è.\n\n–ß—Ç–æ–±—ã —É–∑–Ω–∞—Ç—å —Å–ø–∏—Å–æ–∫ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –ø—Ä–∞–≤–∏–ª –∏ –æ—Ä—Ñ–æ–≥—Ä–∞–º–º, –≤–≤–µ–¥–∏—Ç–µ:\n.rusform list"
        args = utils.get_args_raw(message)
        text = f"üé´ <b>–ö–æ–µ-—á—Ç–æ –Ω–∞—à–µ–ª:</b>\n<b><i>{args}</i></b>"
        if not args:
            await utils.answer(message, "<i>–í–≤–µ–¥–∏—Ç–µ —Ç–æ—á–Ω–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ —Ñ–æ—Ä–º—É–ª—ã/–ø—Ä–∞–≤–∏–ª–∞/—Ç–µ–æ—Ä–µ–º—ã –∏–ª–∏ –∂–µ –ø—Ä–æ–≤–µ—Ä—å—Ç–µ –ø—Ä–∞–≤–∏–ª—å–Ω–æ—Å—Ç—å –Ω–∞–ø–∏—Å–∞–Ω–∏–µ.</i>\n<code>.rusform list</code> <b>—á—Ç–æ–±—ã –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å —Å–ø–∏—Å–æ–∫ —Ñ–æ—Ä–º—É–ª.</b>")
        if args == "list":
            await utils.answer(message, "<b>–†—É—Å—Å–∫–∏–π —è–∑—ã–∫:</b>\n\n'–ù–ï' —Å –ø–æ–ª–Ω—ã–º–∏ –∏ –∫—Ä–∞—Ç–∫–∏–º–∏ –ø—Ä–∏–ª–∞–≥–∞—Ç–µ–ª—å–Ω—ã–º–∏\n–ì–ª–∞—Å–Ω—ã–µ –≤ –ø—Ä–∏—á–∞—Å—Ç–∏—è—Ö\n–ê-–Ø –≤ –ø—Ä–∏—á–∞—Å—Ç–∏—è—Ö –æ–±—Ä–∞–∑–æ–≤–∞–Ω–Ω—ã—Ö –æ—Ç –≥–ª–∞–≥–æ–ª–æ–≤ –Ω–∞ –ê–¢–¨-–Ø–¢–¨\n'–ù–ï' —Å –≥–ª–∞–≥–æ–ª–æ–º\n–ù –≤ —Å—É—Ñ—Ñ–∏–∫—Å–∞—Ö –∫—Ä–∞—Ç–∫–∏—Ö —Å—Ç—Ä–∞–¥–∞—Ç–µ–ª—å–Ω—ã—Ö –ø—Ä–∏—á–∞—Å—Ç–∏–π")
            return
        else:
            await utils.answer(message, '<b>–ò—â—É...</b>')
        if args == "–ù–ï —Å –ø–æ–ª–Ω—ã–º–∏ –∏ –∫—Ä–∞—Ç–∫–∏–º–∏ –ø—Ä–∏–ª–∞–≥–∞—Ç–µ–ª—å–Ω—ã–º–∏" or args == "–Ω–µ —Å –ø–æ–ª–Ω—ã–º–∏ –∏ –∫—Ä–∞—Ç–∫–∏–º–∏ –ø—Ä–∏–ª–∞–≥–∞—Ç–µ–ª—å–Ω—ã–º–∏" or args == "–Ω–µ —Å –ø–æ–ª–Ω—ã–º–∏ –∏ –∫—Ä–∞—Ç–∫–∏–º–∏" or args == "–Ω–µ —Å –∫—Ä–∞—Ç–∫–∏–º–∏ –∏ –ø–æ–ª–Ω—ã–º–∏ –ø—Ä–∏–ª–∞–≥–∞—Ç–µ–ª—å–Ω—ã–º–∏" or args == "–ù–ï —Å –∫—Ä–∞—Ç–∫–∏–º–∏ –∏ –ø–æ–ª–Ω—ã–º–∏ –ø—Ä–∏–ª–∞–≥–∞—Ç–µ–ª—å–Ω—ã–º–∏" or args == "'–ù–ï' —Å –ø–æ–ª–Ω—ã–º–∏ –∏ –∫—Ä–∞—Ç–∫–∏–º–∏ –ø—Ä–∏–ª–∞–≥–∞—Ç–µ–ª—å–Ω—ã–º–∏":
            if message.out:
                await message.delete()
            photo = await self._client.send_file(message.to_id, newithpolniikratkipril, caption=text)
            upload = await self._client.upload_file(await self._client.download_file(photo, bytes))
        elif args == "–ì–ª–∞—Å–Ω—ã–µ –≤ –ø—Ä–∏—á–∞—Å—Ç–∏—è—Ö" or args == "–≥–ª–∞—Å–Ω—ã–µ –≤ –ø—Ä–∏—á–∞—Å—Ç–∏—è—Ö" or args == "–ì–ª–∞—Å–Ω—ã–µ –≤ –ü—Ä–∏—á–∞—Å—Ç–∏—è—Ö" or args == "–ì–õ–ê–°–ù–´–ï –í –ü–†–ò–ß–ê–°–¢–ò–Ø–•" or args == "–ì–ª–∞—Å—Ç–Ω—ã–µ –≤ –ø—Ä–∏—á–∞—Å—Ç–∏—è—Ö":
            if message.out:
                await message.delete()
            photo = await self._client.send_file(message.to_id, consonantinprichast, caption=text)
            upload = await self._client.upload_file(await self._client.download_file(photo, bytes))
        elif args == "–ê-–Ø –≤ –ø—Ä–∏—á–∞—Å—Ç–∏—è—Ö" or args == "–ê-—è –≤ –ø—Ä–∏—á–∞—Å—Ç–∏—è—Ö" or args == "–∞-—è –≤ –ø—Ä–∏—á–∞—Å—Ç–∏—è—Ö" or args == "–ê–Ø –≤ –ø—Ä–∏—á–∞—Å—Ç–∏—è—Ö" or args == "–∞—è –≤ –ø—Ä–∏—á–∞—Å—Ç–∏—è—Ö" or args == "–ê-–Ø –≤ –ø—Ä–∏—á–∞—Å—Ç–∏—è—Ö –æ–±—Ä–∞–∑–æ–≤–∞–Ω–Ω—ã—Ö –æ—Ç –≥–ª–∞–≥–æ–ª–æ–≤ –Ω–∞ –ê–¢–¨-–Ø–¢–¨":
            if message.out:
                await message.delete()
            photo = await self._client.send_file(message.to_id, ayavprichastotglagolovatyat, caption=text)
            upload = await self._client.upload_file(await self._client.download_file(photo, bytes))
        elif args == "–Ω–µ —Å –≥–ª–∞–≥–æ–ª–æ–º" or args == "–ù–ï —Å –≥–ª–∞–≥–æ–ª–æ–º" or args == "" or args == "'–ù–ï' —Å –≥–ª–∞–≥–æ–ª–æ–º" or args == "'–Ω–µ' —Å –≥–ª–∞–≥–æ–ª–æ–º" or args == "–ù–ï –° –ì–õ–ê–ì–û–õ–û–ú":
            if message.out:
                await message.delete()
            photo = await self._client.send_file(message.to_id, newithglagol, caption=text)
            upload = await self._client.upload_file(await self._client.download_file(photo, bytes))
        elif args == "–ù –≤ —Å—É—Ñ—Ñ–∏–∫—Å–∞—Ö –∫—Ä–∞—Ç–∫–∏—Ö —Å—Ç—Ä–∞–¥–∞—Ç–µ–ª—å–Ω—ã—Ö –ø—Ä–∏—á–∞—Å—Ç–∏–π" or args == "–Ω –≤ —Å—É—Ñ—Ñ–∏–∫—Å–∞—Ö –ø—Ä–∏—á–∞—Å—Ç–∏–π" or args == "–Ω –≤ —Å—É—Ñ—Ñ–∏–∫—Å–∞—Ö –∫—Ä–∞—Ç–∫–∏—Ö —Å—Ç—Ä–∞–¥–∞—Ç–µ–ª—å–Ω—ã—Ö –ø—Ä–∏—á–∞—Å—Ç–∏–π" or args == "–Ω –≤ —Å—É—Ñ—Ñ–∏–∫—Å–∞—Ö –ø—Ä–∏—á–∞—Å—Ç–∏–π" or args == "–ù –≤ —Å—É—Ñ—Ñ–∏–∫—Å–∞—Ö —Å—Ç—Ä–∞–¥–∞—Ç–µ–ª—å–Ω—ã—Ö –ø—Ä–∏—á–∞—Å—Ç–∏–π" or args == "–ù –í –°–£–§–§–ò–ö–°–ê–• –ö–†–ê–¢–ö–ò–• –°–¢–†–ê–î–ê–¢–ï–õ–¨–ù–´–• –ü–†–ò–ß–ê–°–¢–ò–ô":
            if message.out:
                await message.delete()
            photo = await self._client.send_file(message.to_id, nvsuffkratkixstradatprich, caption=text)
            upload = await self._client.upload_file(await self._client.download_file(photo, bytes))
        else:
            await utils.answer(message, "<i>–ù–∏—á–µ–≥–æ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ.\n–ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø—Ä–∞–≤–∏–ª—å–Ω–æ—Å—Ç—å –Ω–∞–ø–∏—Å–∞–Ω–∏—è –Ω–∞–∑–≤–∞–Ω–∏—è –ø—Ä–∞–≤–∏–ª–∞ –∏–ª–∏ –æ—Ä—Ñ–æ–≥—Ä–∞–º–º—ã.</i>\n<tg-spoiler>–ò–ª–∏ –∂–µ –≤–≤–µ–¥–∏—Ç–µ .rusform list\n—á—Ç–æ–±—ã –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å —Å–ø–∏—Å–æ–∫ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –ø—Ä–∞–≤–∏–ª.</tg-spoiler>")
