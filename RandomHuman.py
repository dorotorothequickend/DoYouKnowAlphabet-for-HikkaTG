#                ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà
#                ‚ñà‚îÄ‚îÄ‚îÄ‚îÄ‚ñà‚ñà‚îÄ‚îÄ‚îÄ‚îÄ‚ñà‚îÄ‚îÄ‚îÄ‚îÄ‚ñà‚îÄ‚îÄ‚îÄ‚îÄ‚ñà‚îÄ‚îÄ‚îÄ‚ñà‚îÄ‚îÄ‚îÄ‚îÄ‚ñà‚îÄ‚îÄ‚îÄ‚îÄ‚ñà‚îÄ‚îÄ‚îÄ‚îÄ‚ñà
#                ‚ñà‚îÄ‚ñà‚ñà‚îÄ‚îÄ‚ñà‚îÄ‚ñà‚ñà‚îÄ‚ñà‚îÄ‚ñà‚ñà‚îÄ‚ñà‚îÄ‚ñà‚ñà‚îÄ‚ñà‚ñà‚îÄ‚ñà‚ñà‚îÄ‚ñà‚ñà‚îÄ‚ñà‚îÄ‚ñà‚ñà‚îÄ‚ñà‚îÄ‚ñà‚ñà‚îÄ‚ñà
#                ‚ñà‚îÄ‚ñà‚ñà‚îÄ‚îÄ‚ñà‚îÄ‚ñà‚ñà‚îÄ‚ñà‚îÄ‚îÄ‚îÄ‚îÄ‚ñà‚îÄ‚ñà‚ñà‚îÄ‚ñà‚ñà‚îÄ‚ñà‚ñà‚îÄ‚ñà‚ñà‚îÄ‚ñà‚îÄ‚îÄ‚îÄ‚îÄ‚ñà‚îÄ‚ñà‚ñà‚îÄ‚ñà
#                ‚ñà‚îÄ‚ñà‚ñà‚îÄ‚îÄ‚ñà‚îÄ‚ñà‚ñà‚îÄ‚ñà‚îÄ‚ñà‚îÄ‚ñà‚ñà‚îÄ‚ñà‚ñà‚îÄ‚ñà‚ñà‚îÄ‚ñà‚ñà‚îÄ‚ñà‚ñà‚îÄ‚ñà‚îÄ‚ñà‚îÄ‚ñà‚ñà‚îÄ‚ñà‚ñà‚îÄ‚ñà
#                ‚ñà‚îÄ‚îÄ‚îÄ‚îÄ‚ñà‚ñà‚îÄ‚îÄ‚îÄ‚îÄ‚ñà‚îÄ‚ñà‚îÄ‚ñà‚ñà‚îÄ‚îÄ‚îÄ‚îÄ‚ñà‚ñà‚îÄ‚ñà‚ñà‚îÄ‚îÄ‚îÄ‚îÄ‚ñà‚îÄ‚ñà‚îÄ‚ñà‚ñà‚îÄ‚îÄ‚îÄ‚îÄ‚ñà
#                ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà
#
#
#                     Copyright 2022 t.me/km90h
#             https://www.gnu.org/licenses/agpl-3.0.html                 
#                                                         
# ---------------------------------------------------------------------------------
# meta banner: https://raw.githubusercontent.com/dorotorothequickend/DorotoroModules/main/banners/DorotoroGenerateHuman.png
# meta developer: @DorotoroMods

from .. import loader, utils
from telethon.tl.types import Message
from ..utils import answer

@loader.tds
class RandomHuman(loader.Module): 
	"""–û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —Ä–∞–Ω–¥–æ–º–Ω–æ–µ –∏–º—è, —Ñ–∞–º–∏–ª–∏—é, –¥–∞—Ç—É —Ä–æ–∂–¥–µ–Ω–∏—è, email, –ø–∞—Ä–æ–ª—å –∏ —Ç–µ–ª–µ—Ñ–æ–Ω.""" 
	strings = {'name': 'GenerateHuman'} 
	
	@loader.command()
	async def generatehumancmd(self, message: Message):
		"- —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å —á–µ–ª–æ–≤–µ–∫–∞."
		msg = await answer(message, '<b><i>–ü–æ–¥–±–∏—Ä–∞—é —á–µ–ª–æ–≤–µ–∫–∞...</i></b>')
		async with self._client.conversation("@randomdatatools_bot") as conv:
			popo4ka = await conv.send_message("üë§ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å")
			r = await conv.get_response()
			await popo4ka.delete() 
			await r.delete()
		dsopthx = r.text.split('\n')
		dsopthx.remove('üë§ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å')
		dsopthx.remove('<i>(–ù–∞–∂–º–∏—Ç–µ –Ω–∞ –∑–Ω–∞—á–µ–Ω–∏–µ, —á—Ç–æ–±—ã —Å–∫–æ–ø–∏—Ä–æ–≤–∞—Ç—å –µ–≥–æ)</i>')
		chel = '\n'.join(dsopthx)
		text = f"<b>–ß–µ–ª–æ–≤–µ–∫ —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω. –ö–æ–µ-—á—Ç–æ –ø—Ä–æ –Ω–µ–≥–æ:\n\n{chel}\n\n<tg-spoiler><i>RandomHuman</i></tg-spoiler></b>"
		await answer(msg, text)

	@loader.command()
	async def generatepasscmd(self, message: Message):
		"- —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å –ø–∞—Å–ø–æ—Ä—Ç."
		msg = await answer(message, "<b><i>–ò—â—É –ø–∞—Å–ø–æ—Ä—Ç–∞...</i></b>")
		async with self._client.conversation("@randomdatatools_bot") as conv:
			jdun = await conv.send_message("üõÇ –ü–∞—Å–ø–æ—Ä—Ç")
			r = await conv.get_response()
			await jdun.delete()
			await r.delete()
		udalit = r.text.split('\n')
		udalit.remove("üõÇ –ü–∞—Å–ø–æ—Ä—Ç")
		udalit.remove("<i>(–ù–∞–∂–º–∏—Ç–µ –Ω–∞ –∑–Ω–∞—á–µ–Ω–∏–µ, —á—Ç–æ–±—ã —Å–∫–æ–ø–∏—Ä–æ–≤–∞—Ç—å –µ–≥–æ)</i>")
		papa = '\n'.join(udalit)
		text = f"<b>–ü–∞—Å–ø–æ—Ä—Ç —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω. –í–æ—Ç —á—Ç–æ —è –Ω–∞—Ä—ã–ª:\n\n{papa}\n\n<tg-spoiler><i>RandomHuman</i></tg-spoiler></b>"
		await answer(msg, text)

	@loader.command()
	async def generateschlcmd(self, message: Message):
		"- —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å –∏–Ω—Ñ-—Ü–∏—é –æ–± –æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏–∏."
		msg = await answer(message, "<b><i>–ü—Ä–æ–±–∏–≤–∞—é –¥–æ–∫—É–º–µ–Ω—Ç—ã...</i></b>")
		async with self._client.conversation("@randomdatatools_bot") as conv:
			jdun = await conv.send_message("üè´ –û–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ")
			r = await conv.get_response()
			await jdun.delete()
			await r.delete()
		udalit = r.text.split('\n')
		udalit.remove("üè´ –û–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ")
		udalit.remove("<i>(–ù–∞–∂–º–∏—Ç–µ –Ω–∞ –∑–Ω–∞—á–µ–Ω–∏–µ, —á—Ç–æ–±—ã —Å–∫–æ–ø–∏—Ä–æ–≤–∞—Ç—å –µ–≥–æ)</i>")
		papa = '\n'.join(udalit)
		text = f"<b>–û–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–æ. –í–æ—Ç —á—Ç–æ —è –Ω–∞—Ä—ã–ª:\n\n{papa}\n\n<tg-spoiler><i>RandomHuman</i></tg-spoiler></b>"
		await answer(msg, text)

	@loader.command()
	async def generatedocscmd(self, message: Message):
		"- —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å –¥–æ–∫—É–º–µ–Ω—Ç—ã."
		msg = await answer(message, "<b><i>–ü—Ä–æ–±–∏–≤–∞—é –¥–æ–∫—É–º–µ–Ω—Ç—ã...</i></b>")
		async with self._client.conversation("@randomdatatools_bot") as conv:
			jdun = await conv.send_message("üìÑ –î–æ–∫—É–º–µ–Ω—Ç—ã")
			r = await conv.get_response()
			await jdun.delete()
			await r.delete()
		udalit = r.text.split('\n')
		udalit.remove("üìÑ –î–æ–∫—É–º–µ–Ω—Ç—ã")
		udalit.remove("<i>(–ù–∞–∂–º–∏—Ç–µ –Ω–∞ –∑–Ω–∞—á–µ–Ω–∏–µ, —á—Ç–æ–±—ã —Å–∫–æ–ø–∏—Ä–æ–≤–∞—Ç—å –µ–≥–æ)</i>")
		papa = '\n'.join(udalit)
		text = f"<b>–î–æ–∫—É–º–µ–Ω—Ç—ã —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω—ã. –í–æ—Ç —á—Ç–æ —è –Ω–∞—Ä—ã–ª:\n\n{papa}\n\n<tg-spoiler><i>RandomHuman</i></tg-spoiler></b>"
		await answer(msg, text)

	@loader.command()
	async def generateauto(self, message: Message):
		"- —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å –∏–Ω—Ñ-—Ü–∏—é –æ–± –∞–≤—Ç–æ."
		msg = await answer(message, "<b><i>–ü—Ä–æ–±–∏–≤–∞—é –Ω–æ–º–µ—Ä–∞ –∞–≤—Ç–æ...</i></b>")
		async with self._client.conversation("@randomdatatools_bot") as conv:
			jdun = await conv.send_message("üöô –ê–≤—Ç–æ–º–æ–±–∏–ª—å")
			r = await conv.get_response()
			await jdun.delete()
			await r.delete()
		udalit = r.text.split('\n')
		udalit.remove("üöô –ê–≤—Ç–æ–º–æ–±–∏–ª—å")
		udalit.remove("<i>(–ù–∞–∂–º–∏—Ç–µ –Ω–∞ –∑–Ω–∞—á–µ–Ω–∏–µ, —á—Ç–æ–±—ã —Å–∫–æ–ø–∏—Ä–æ–≤–∞—Ç—å –µ–≥–æ)</i>")
		papa = '\n'.join(udalit)
		text = f"<b>–ê–≤—Ç–æ–º–æ–±–∏–ª—å —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω. –í–æ—Ç —á—Ç–æ —è –Ω–∞—Ä—ã–ª:\n\n{papa}\n\n<tg-spoiler><i>RandomHuman</i></tg-spoiler></b>"
		await answer(msg, text)

	@loader.command()
	async def generatebank(self, message: Message):
		"- —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å –ø–ª–∞—Ç–µ–∂–Ω—É—é –∏–Ω—Ñ-—Ü–∏—é."
		msg = await answer(message, "<b><i>–ü—Ä–æ–±–∏–≤–∞—é –±–∞–Ω–∫–æ–≤—Å–∫–∏–µ –∫–∞—Ä—Ç—ã...</i></b>")
		async with self._client.conversation("@randomdatatools_bot") as conv:
			jdun = await conv.send_message("üè¶ –ë–∞–Ω–∫")
			r = await conv.get_response()
			await jdun.delete()
			await r.delete()
		udalit = r.text.split('\n')
		udalit.remove("üè¶ –ü–ª–∞—Ç–µ–∂–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è")
		udalit.remove("<i>(–ù–∞–∂–º–∏—Ç–µ –Ω–∞ –∑–Ω–∞—á–µ–Ω–∏–µ, —á—Ç–æ–±—ã —Å–∫–æ–ø–∏—Ä–æ–≤–∞—Ç—å –µ–≥–æ)</i>")
		papa = '\n'.join(udalit)
		text = f"<b>–ü–ª–∞—Ç–µ–∂–Ω–∞—è –∏–Ω—Ñ-—Ü–∏—è —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–∞. –í–æ—Ç —á—Ç–æ —è –Ω–∞—Ä—ã–ª:\n\n{papa}\n\n<tg-spoiler><i>RandomHuman</i></tg-spoiler></b>"
		await answer(msg, text)
